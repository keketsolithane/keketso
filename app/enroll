"use client"

import type React from "react"

import { useState } from "react"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { Textarea } from "@/components/ui/textarea"
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select"
import { Checkbox } from "@/components/ui/checkbox"
import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group"

export default function EnrollPage() {
  const [formData, setFormData] = useState({
    firstName: "",
    lastName: "",
    email: "",
    phone: "",
    course: "",
    experience: "",
    motivation: "",
    terms: false,
  })

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault()
    // Handle form submission
    console.log("Form submitted:", formData)
    alert("Enrollment submitted successfully! We will contact you soon.")
  }

  return (
    <div className="min-h-screen bg-gray-50 py-12">
      <div className="container mx-auto px-4 max-w-2xl">
        <div className="text-center mb-8">
          <h1 className="text-4xl font-bold mb-4">Course Enrollment</h1>
          <p className="text-gray-600 text-lg">
            Fill out the form below to enroll in your selected Cisco certification course
          </p>
        </div>

        <Card>
          <CardHeader>
            <CardTitle>Enrollment Application</CardTitle>
            <CardDescription>Please provide your information to complete the enrollment process</CardDescription>
          </CardHeader>

          <CardContent>
            <form onSubmit={handleSubmit} className="space-y-6">
              {/* Personal Information */}
              <div className="grid md:grid-cols-2 gap-4">
                <div className="space-y-2">
                  <Label htmlFor="firstName">First Name *</Label>
                  <Input
                    id="firstName"
                    value={formData.firstName}
                    onChange={(e) => setFormData({ ...formData, firstName: e.target.value })}
                    required
                  />
                </div>
                <div className="space-y-2">
                  <Label htmlFor="lastName">Last Name *</Label>
                  <Input
                    id="lastName"
                    value={formData.lastName}
                    onChange={(e) => setFormData({ ...formData, lastName: e.target.value })}
                    required
                  />
                </div>
              </div>

              <div className="space-y-2">
                <Label htmlFor="email">Email Address *</Label>
                <Input
                  id="email"
                  type="email"
                  value={formData.email}
                  onChange={(e) => setFormData({ ...formData, email: e.target.value })}
                  required
                />
              </div>

              <div className="space-y-2">
                <Label htmlFor="phone">Phone Number *</Label>
                <Input
                  id="phone"
                  type="tel"
                  value={formData.phone}
                  onChange={(e) => setFormData({ ...formData, phone: e.target.value })}
                  required
                />
              </div>

              {/* Course Selection */}
              <div className="space-y-2">
                <Label htmlFor="course">Select Course *</Label>
                <Select value={formData.course} onValueChange={(value) => setFormData({ ...formData, course: value })}>
                  <SelectTrigger>
                    <SelectValue placeholder="Choose a course" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="ccna-intro">CCNA: Introduction to Networks</SelectItem>
                    <SelectItem value="ccna-switching">CCNA: Switching, Routing, and Wireless Essentials</SelectItem>
                    <SelectItem value="ccna-enterprise">
                      CCNA: Enterprise Networking, Security, and Automation
                    </SelectItem>
                    <SelectItem value="networking-essentials">Networking Essentials</SelectItem>
                    <SelectItem value="network-addressing">Network Addressing and Basic Troubleshooting</SelectItem>
                    <SelectItem value="networking-devices">Networking Devices and Initial Configuration</SelectItem>
                    <SelectItem value="iot-intro">Introduction to IoT and Digital Transformation</SelectItem>
                    <SelectItem value="cybersecurity-intro">Introduction to Cybersecurity</SelectItem>
                    <SelectItem value="cybersecurity-essentials">Cybersecurity Essentials</SelectItem>
                    <SelectItem value="network-security">Network Security</SelectItem>
                    <SelectItem value="ethical-hacker">Ethical Hacker</SelectItem>
                    <SelectItem value="cyberops">CyberOps Associate</SelectItem>
                    <SelectItem value="python-essentials">Python Essentials 2</SelectItem>
                    <SelectItem value="css-essentials">CSS Essentials</SelectItem>
                    <SelectItem value="data-science-intro">Introduction to Data Science</SelectItem>
                    <SelectItem value="data-analytics">Data Analytics Essentials</SelectItem>
                    <SelectItem value="data-science-python">Data Science Essentials with Python</SelectItem>
                    <SelectItem value="packet-tracer-networking">
                      Exploring Networking with Cisco Packet Tracer
                    </SelectItem>
                    <SelectItem value="packet-tracer-iot">
                      Exploring Internet of Things with Cisco Packet Tracer
                    </SelectItem>
                    <SelectItem value="operating-systems">Operating Systems Basics</SelectItem>
                    <SelectItem value="computer-hardware">Computer Hardware Basics</SelectItem>
                    <SelectItem value="digital-safety">Digital Safety and Security Awareness</SelectItem>
                    <SelectItem value="computer-mobile">Using Computer and Mobile Devices</SelectItem>
                    <SelectItem value="business-launch">Launching a Business Venture</SelectItem>
                    <SelectItem value="business-manage">Managing a Business Venture</SelectItem>
                  </SelectContent>
                </Select>
              </div>

              {/* Experience Level */}
              <div className="space-y-3">
                <Label>Current Experience Level *</Label>
                <RadioGroup
                  value={formData.experience}
                  onValueChange={(value) => setFormData({ ...formData, experience: value })}
                >
                  <div className="flex items-center space-x-2">
                    <RadioGroupItem value="beginner" id="beginner" />
                    <Label htmlFor="beginner">Beginner - New to networking</Label>
                  </div>
                  <div className="flex items-center space-x-2">
                    <RadioGroupItem value="intermediate" id="intermediate" />
                    <Label htmlFor="intermediate">Intermediate - Some networking experience</Label>
                  </div>
                  <div className="flex items-center space-x-2">
                    <RadioGroupItem value="advanced" id="advanced" />
                    <Label htmlFor="advanced">Advanced - Extensive networking background</Label>
                  </div>
                </RadioGroup>
              </div>

              {/* Motivation */}
              <div className="space-y-2">
                <Label htmlFor="motivation">Why do you want to take this course?</Label>
                <Textarea
                  id="motivation"
                  placeholder="Tell us about your goals and motivation..."
                  value={formData.motivation}
                  onChange={(e) => setFormData({ ...formData, motivation: e.target.value })}
                  rows={4}
                />
              </div>

              {/* Terms and Conditions */}
              <div className="flex items-center space-x-2">
                <Checkbox
                  id="terms"
                  checked={formData.terms}
                  onCheckedChange={(checked) => setFormData({ ...formData, terms: checked as boolean })}
                />
                <Label htmlFor="terms" className="text-sm">
                  I agree to the terms and conditions and privacy policy *
                </Label>
              </div>

              <Button
                type="submit"
                className="w-full bg-gradient-to-r from-teal-600 to-red-500 hover:from-teal-700 hover:to-red-600"
                disabled={!formData.terms}
              >
                Submit Enrollment Application
              </Button>
            </form>
          </CardContent>
        </Card>

        {/* Contact Information */}
        <Card className="mt-8">
          <CardHeader>
            <CardTitle>Need Help?</CardTitle>
          </CardHeader>
          <CardContent>
            <p className="text-gray-600 mb-4">
              If you have any questions about the enrollment process or our courses, please contact us:
            </p>
            <div className="space-y-2 text-sm">
              <p>
                <strong>Email:</strong> info@sparklesmartec.com
              </p>
              <p>
                <strong>Phone:</strong> +266-63651639
              </p>
              <p>
                <strong>Office Hours:</strong> Monday - Friday, 9:00 AM - 5:00 PM
              </p>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  )
}
